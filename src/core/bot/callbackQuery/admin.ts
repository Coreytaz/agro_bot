import type { Context } from "../core/interface/Context";
import { createAdminMenuKeyboard } from "../utils";

async function adminContent(ctx: Context) {
  await ctx.answerCallbackQuery();
  await ctx.editMessageText(
    "üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º\n\n–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º",
    {
      reply_markup: {
        inline_keyboard: [
          [{ text: "‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data: "admin_back" }],
        ],
      },
    },
  );
}

async function adminBroadcast(ctx: Context) {
  await ctx.answerCallbackQuery();
  await ctx.editMessageText(
    "üì¢ –†–∞—Å—Å—ã–ª–∫–∞\n\n–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π",
    {
      reply_markup: {
        inline_keyboard: [
          [{ text: "‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data: "admin_back" }],
        ],
      },
    },
  );
}

async function adminModelSettings(ctx: Context) {
  await ctx.answerCallbackQuery();
  await ctx.editMessageText(
    "ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥–µ–ª–∏\n\n–ó–¥–µ—Å—å –±—É–¥—É—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ò–ò –º–æ–¥–µ–ª–∏",
    {
      reply_markup: {
        inline_keyboard: [
          [{ text: "‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data: "admin_back" }],
        ],
      },
    },
  );
}

async function adminStatistics(ctx: Context) {
  await ctx.answerCallbackQuery();
  await ctx.editMessageText(
    "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞",
    {
      reply_markup: {
        inline_keyboard: [
          [{ text: "‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data: "admin_back" }],
        ],
      },
    },
  );
}

async function adminUsers(ctx: Context) {
  await ctx.answerCallbackQuery();
  await ctx.editMessageText(
    "üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏\n\n–ó–¥–µ—Å—å –±—É–¥–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏",
    {
      reply_markup: {
        inline_keyboard: [
          [{ text: "‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data: "admin_back" }],
        ],
      },
    },
  );
}

async function adminBack(ctx: Context) {
  await ctx.answerCallbackQuery();
  const [title, keyboard] = await createAdminMenuKeyboard(ctx);
  await ctx.editMessageText(title, {
    reply_markup: keyboard,
  });
}

export default {
  "admin_content": adminContent,
  "admin_broadcast": adminBroadcast,
  "admin_model_settings": adminModelSettings,
  "admin_statistics": adminStatistics,
  "admin_users": adminUsers,
  "admin_back": adminBack,
};
